- hosts: localhost
  gather_facts: True
  vars:
      ansible_python_interpreter: /usr/bin/python3 
  
  
  tasks: 
      
  - name: Get repository
    git:
      repo: 'https://github.com/toharikr/project.git'
      dest: $(Build.SourcesDirectory)

  - include_vars: $(Build.SourcesDirectory)/env.yml
  
 
 
  - name: ansible create directory example
    file:
      path: ~/.azure
      state: directory
  - copy:
      src: $(Build.SourcesDirectory)/credentials
      dest: ~/.azure 
       
  - name: Create resource group
    azure_rm_resourcegroup:
        name: "{{ resourcegroup }}"
        location: eastus
        
  - name: ssh   
    openssh_keypair:
       path: /tmp/id_ssh_rsa
    register: res
  - name: show the value of output
    debug: var=res
 
  - name: Fix azure_rm_aks Bug
    get_url:
       url: https://raw.githubusercontent.com/haiyuazhang/ansible/features/lib/ansible/modules/cloud/azure/azure_rm_aks.py
       dest: ~/.local/lib/python3.6/site-packages/ansible/modules/cloud/azure/azure_rm_aks.py
       checksum: sha256:96a111b66aec128fc8165beb803ac8684a8b2d3e84ba7be6ae0db94a81457fd6
  
  #- name: Remove a managed Azure Container Services (AKS) instance in Dev
  #  azure_rm_aks:
  #    name: "{{ aksnamedev }}"
  #    resource_group: "{{ resourcegroup }}"
  #    state: absent
 
  #- name: Remove a managed Azure Container Services (AKS) instance in QA
  #  azure_rm_aks:
  #    name: "{{ aksnameqa }}"
  #    resource_group: "{{ resourcegroup }}"
  #    state: absent
 
       
  - name: Create a managed Azure Container Services (AKS) dev instance
    azure_rm_aks:
      name: "akstest"
      location: eastus2
      resource_group: "{{ resourcegroup }}"
      dns_prefix: "{{ aksnamedev }}"
      kubernetes_version: 1.14.7
      linux_profile:
        admin_username: azureuser
        ssh_key: "{{ res.public_key }}"
      service_principal:
        client_id: "{{ client_id }}"
        client_secret: "{{ secret }}"
      agent_pool_profiles:
        - name: default
          count: 1
          vm_size: Standard_D2_v2
      attach-acr: demoazurecr
      tags:
        Environment: projectdev
    register: aksvar
    
  - debug:
      var: aksvar
    
    
  #- name: Create a managed Azure Container Services (AKS) QA instance
  #  azure_rm_aks:
  #    name: "{{ aksnameqa }}"
  #    location: eastus2
  #    resource_group: "{{ resourcegroup }}"
  #    dns_prefix: "{{ aksnameqa }}"
  #    kubernetes_version: 1.14.7
  #    linux_profile:
  #      admin_username: azureuser
  #      ssh_key: "{{ res.public_key }}"
  #    service_principal:
  #      client_id: "{{ client_id }}"
  #      client_secret: "{{ secret }}"
  #    agent_pool_profiles:
  #      - name: default
  #        count: 1
  #        vm_size: Standard_D2_v2
  #    tags:
  #      Environment: projectqa
  #  register: aks  
    
    
    
  #- debug: msg="{{ aks.stdout }}"
  
  #- name: Create an azure container registry
  #  azure_rm_containerregistry:
  #    name: "{{ acr }}"
  #    location: eastus
  #    resource_group: "{{ resourcegroup }}"
  #    admin_user_enabled: true
  #    sku: Premium
  #    tags:
  #      Release: beta1
  #      Environment: project
        
        
